<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hzc.com.mapper.SysUserMapper">
  <resultMap id="BaseResultMap" type="hzc.com.model.SysUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="locked" jdbcType="INTEGER" property="locked" />
    <result column="last_login_date" jdbcType="TIMESTAMP" property="lastLoginDate" />
    <result column="login_count" jdbcType="BIGINT" property="loginCount" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_name, user_code, password, salt, gender, email, phone, address, note, locked, 
    last_login_date, login_count, is_deleted, create_date
  </sql>

  <sql id="params" >
    <!--  <trim prefix="where" prefixOverrides="and || or">-->
        <if test="id != null and id != '' " >
          and id = #{id}
        </if>

        <if test="userName != null and userName != '' " >
          and user_name = #{userName}
        </if>
        <if test="userCode != null and userCode != '' ">
          and user_code  like   concat('%',#{userCode},'%')
        </if>

        <if test="gender != null and gender != '' ">
          and gender = #{gender}
        </if>
        <if test="email != null and email != '' ">
          and email = #{email}
        </if>
        <if test="phone != null and phone != '' ">
          and phone = #{phone}
        </if>
        <if test="address != null and address != '' ">
          and address = #{address}
        </if>
        <if test="note != null and note != '' ">
          and note = #{note}
        </if>
        <if test="locked != null and locked != '' ">
          and locked = #{locked}
        </if>
        <if test="lastLoginDate != null and lastLoginDate != '' ">
          and last_login_date = #{lastLoginDate}
        </if>
        <if test="loginCount != null and loginCount != '' ">
          and login_count = #{loginCount}
        </if>
        <if test="isDeleted != null and isDelete != '' ">
          and is_deleted = #{isDeleted}
        </if>
        <if test="createDate != null and createDate != '' ">
          and create_date = #{createDate}
        </if>
     <!-- </trim>-->
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />

    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="hzc.com.model.SysUser">
    insert into sys_user (user_name, user_code,
      password, salt, gender, 
      email, phone, address, 
      note, locked, last_login_date, 
      login_count, is_deleted, create_date
      )
    values ( #{userName,jdbcType=VARCHAR}, #{userCode,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, '0', sysdate(), '0', '0', sysdate()
      )
  </insert>
  <insert id="insertSelective" parameterType="hzc.com.model.SysUser">
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="loginCount != null">
        login_count,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=INTEGER},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=BIGINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="hzc.com.model.SysUser">
    update sys_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userCode != null">
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=INTEGER},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = sysdate() ,
      </if>
      <if test="loginCount != null">
        login_count = login_count+1
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="hzc.com.model.SysUser">
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_code = #{userCode,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=INTEGER},
      last_login_date = #{lastLoginDate,jdbcType=TIMESTAMP},
      login_count = #{loginCount,jdbcType=BIGINT},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 根据登录账号获取用户信息  -->
  <select id="findUserCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where is_deleted = '0' and user_code = #{userCode}
  </select>

  <!-- 锁定账号 -->
  <update id="lockUserCode"  parameterType="java.lang.String">
    update sys_user set locked = '1'    where is_deleted = '0' and user_code = #{userCode}
  </update>

 <!--  根据条件获取系统用户信息findUserAll -->
  <select id="findUserAll" parameterType="hzc.com.model.SysUser"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where is_deleted = '0'
    <include refid="params"/>
  </select>

</mapper>